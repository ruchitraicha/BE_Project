import 'package:flutter/material.dart';
import 'package:flutter_locales/flutter_locales.dart';
import 'package:suraksha_kavach/login.dart';
import 'package:suraksha_kavach/theme.dart';

import 'package:http/http.dart' as http;
import 'dart:convert';

import 'package:flutter/cupertino.dart';

import 'ConfigFile.dart';

class PredictPage extends StatefulWidget {
  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<PredictPage> {

  String dropdownValue = 'Select state';

  List <String> spinnerItems = [
    'Select state',
    'Haryana',
    'Rajasthan',
    'Uttar Pradesh',
    'Delhi',
    'Ladakh',
    'Tamil Nadu',
    'Kerala',
    'Jammu and Kashmir',
    'Karnataka',
    'Maharashtra',
    'Andhra Pradesh',
    'Telengana',
    'Punjab',
    'Uttarakhand',
    'Odisha',
    'West Bengal',
    'Gujarat',
    'Chhattisgarh',
    'Bihar',
    'Puducherry',
    'Tripura',
    'Jharkhand',
    'Assam',
    'Himachal Pradesh',
    'Manipur',
    'Mizoram',
    'Dadra and Nagar Haveli and Daman and Diu',
    'Goa',
    'Sikkim',
    'Arunachal Pradesh'
  ] ;

  var my1 = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        toolbarHeight: 60,
        title: LocaleText("Suraksha kavach",
          style: TextStyle(
            fontSize: 20.0,
          ),
        ),
        automaticallyImplyLeading: false,
        actions: <Widget>[
          IconButton(
            icon: Icon(
              Icons.logout,
              color: Colors.white,
              size: 30,
            ),
            onPressed: () {
              Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => LoginPage()));
            },
          )
        ],
      ),
      backgroundColor: Colors.white,
      body: SafeArea(
        child: SingleChildScrollView(
          padding: EdgeInsets.fromLTRB(24.0, 40.0, 24.0, 0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  LocaleText(
                    'Covid-19 Statistics',
                    style: heading2.copyWith(color: textBlack),
                  ),
                  SizedBox(
                    height: 20,
                  ),
                  Image.asset(
                    'assets/images/accent.png',
                    width: 99,
                    height: 4,
                  ),
                ],
              ),
              SizedBox(
                height: 50,
              ),

              Form(
                child: Column(
                  children: [
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        keyboardType: TextInputType.number,
                        decoration: InputDecoration(
                          hintText: 'Enter age',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my1,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child:
                      Padding(
                        padding: EdgeInsets.fromLTRB(20, 5, 20, 5),
                        child: DropdownButton<String>(
                          isExpanded: true,
                          value: dropdownValue,
                          icon: Icon(Icons.arrow_drop_down),
                          iconSize: 24,
                          elevation: 16,
                          style: TextStyle(color: Colors.black, fontSize: 17),
                          onChanged: (String data) {
                            setState(() {
                              dropdownValue = data;
                            });
                          },
                          items: spinnerItems.map<DropdownMenuItem<String>>((String value) {
                            return DropdownMenuItem<String>(
                              value: value,
                              child: Text(value),
                            );
                          }).toList(),
                        ),
                      ),
                    ),
                  ],
                ),
              ),

              SizedBox(
                height: 50,
              ),

              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  primary: primaryBlue,
                  onPrimary: Colors.white,
                  shadowColor: Colors.black,
                  elevation: 3,
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15.0)),
                  minimumSize: Size(500, 60),
                ),
                onPressed: () async {

                  String text1,text2;

                  text1 = my1.text ;
                  text2 = dropdownValue ;

                  if(text1 == '' || text2 == 'Select state')
                  {
                    showDialog(
                      context: context,
                      builder: (context) {
                        Widget okButton = TextButton(
                          child: Text("OK"),
                          onPressed: (){
                            Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => PredictPage()));
                          },
                        );
                        return AlertDialog(
                          title: Text("Result"),
                          content: Text('Text Field is empty, Please Fill All Data'),
                          actions: [
                            okButton,
                          ],
                        );
                      },
                    );
                  }
                  else{
                    // "Your age and state is : "+my1.text+" and "+'$dropdownValue'
                    text1 = my1.text ;
                    text2 = '$dropdownValue' ;
                    //url to send the post request to
                    final url = serverurl+"prediction";
                    // final url = 'http://192.168.1.5:5000/prediction';

                    //sending a post request to the url
                    final response = await http.post(url, body: json.encode({'age' : text1,'state' : text2}));

                    String responseBody = response.body;

                    if(responseBody == "0"){
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: (){
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) => PredictPage()));
                            },
                          );
                          return AlertDialog(
                            title: Text("Result"),
                            content: Text('Less Vulnerable'),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      );
                    }
                    else if(responseBody == "1"){
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: (){
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) => PredictPage()));
                            },
                          );
                          return AlertDialog(
                            title: Text("Result"),
                            content: Text('Medium Vulnerable'),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      );
                    }
                    else{
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: (){
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) => PredictPage()));
                            },
                          );
                          return AlertDialog(
                            title: Text("Result"),
                            content: Text('High Vulnerable'),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      );
                    }

                  }
                },
                child: LocaleText('Predict',
                  style: TextStyle(
                    fontSize: 18.0,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
