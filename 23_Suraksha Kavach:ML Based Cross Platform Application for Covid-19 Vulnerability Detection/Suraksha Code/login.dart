import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_locales/flutter_locales.dart';
import 'package:suraksha_kavach/register.dart';
import 'package:suraksha_kavach/theme.dart';
import 'package:suraksha_kavach/widgets/custom_checkbox.dart';
import 'package:suraksha_kavach/widgets/primary_button.dart';

import 'package:http/http.dart' as http;
import 'dart:convert';

import 'ConfigFile.dart';


class LoginPage extends StatefulWidget {
  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {

  var my1 = TextEditingController();
  var my2 = TextEditingController();

  bool passwordVisible = false;
  void togglePassword() {
    setState(() {
      passwordVisible = !passwordVisible;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SafeArea(
        child: SingleChildScrollView(
          padding: EdgeInsets.fromLTRB(24.0, 40.0, 24.0, 0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  LocaleText(
                    'Login to your account',
                    style: heading2.copyWith(color: textBlack),
                  ),
                  SizedBox(
                    height: 20,
                  ),
                  Image.asset(
                    'assets/images/accent.png',
                    width: 99,
                    height: 4,
                  ),
                ],
              ),
              SizedBox(
                height: 48,
              ),
              Form(
                child: Column(
                  children: [
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                          decoration: InputDecoration(
                          hintText: 'Username',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my1,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        obscureText: !passwordVisible,
                        decoration: InputDecoration(
                          hintText: 'Password',
                          hintStyle: heading6.copyWith(color: textGrey),
                          suffixIcon: IconButton(
                            color: textGrey,
                            splashRadius: 1,
                            icon: Icon(passwordVisible
                                ? Icons.visibility_outlined
                                : Icons.visibility_off_outlined),
                            onPressed: togglePassword,
                          ),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my2,
                      ),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: 32,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  CustomCheckbox(),
                  SizedBox(
                    width: 12,
                  ),
                  LocaleText('Remember me', style: regular16pt),
                ],
              ),
              SizedBox(
                height: 32,
              ),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  primary: primaryBlue,
                  onPrimary: Colors.white,
                  shadowColor: Colors.black,
                  elevation: 3,
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15.0)),
                  minimumSize: Size(500, 60),
                ),
                onPressed: () async {

                  String text1,text2;

                  text1 = my1.text ;
                  text2 = my2.text ;

                  print("My text ${text1} and ${text2}");

                  if(text1 == '' || text2 == '')
                  {
                    showDialog(
                      context: context,
                      builder: (context) {
                        Widget okButton = TextButton(
                          child: Text("OK"),
                          onPressed: goToLoginScreen,
                        );
                        return AlertDialog(
                          title: Text("Result"),
                          content: Text('Text Field is empty, Please Fill All Data'),
                          actions: [
                            okButton,
                          ],
                        );
                      },
                    );
                  }else{
                    //url to send the post request to
                    final url = serverurl+"login";
                    // final url = 'http://192.168.1.5:5000/login';

                    //sending a post request to the url
                    final response = await http.post(url, body: json.encode({'name' : text1,'pass' : text2}));

                    String responseBody = response.body;

                    if(responseBody == "success"){
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: goToHomeScreen,
                          );
                          return AlertDialog(
                            title: Text("Welcome"),
                            content: Text("You have been successful login !"),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      );
                    }else{
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: goToLoginScreen,
                          );
                          return AlertDialog(
                            title: Text("Result"),
                            content: Text("Invalid username and password.\nYou need to login again."),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      );
                    }
                  }
                },
                child: LocaleText('Login',
                  style: TextStyle(fontSize: 18.0),
                ),
              ),
              SizedBox(
                height: 24,
              ),
              Center(
                child: LocaleText(
                  'OR',
                  style: heading6.copyWith(color: textGrey),
                ),
              ),
              SizedBox(
                height: 24,
              ),
              // CustomPrimaryButton(
              //   buttonColor: Color(0xfffbfbfb),
              //   textValue: 'Login with Google',
              //   textColor: textBlack,
              // ),
              SizedBox(
                height: 50,
              ),
              Column(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      LocaleText(
                        "Don't have an account? ",
                        style: regular16pt.copyWith(color: textGrey),
                      ),
                      GestureDetector(
                        onTap: () {
                          Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (context) => RegisterPage()));
                        },
                        child: LocaleText(
                          'Register',
                          style: regular16pt.copyWith(color: primaryBlue),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: primaryBlue,
        child: Icon(Icons.language_outlined,),
        onPressed: () => Navigator.push(
          context,
          MaterialPageRoute(builder: (_) => LanguagePage()),
        ),
      ),
    );
  }

  void goToLoginScreen() {
    Navigator.pushReplacementNamed(context, "/login");
  }
  void goToHomeScreen() {
    Navigator.pushReplacementNamed(context, "/home");
  }
}

class LanguagePage extends StatefulWidget {
  @override
  _LanguagePageState createState() => _LanguagePageState();
}

class _LanguagePageState extends State<LanguagePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: primaryBlue,
        title: LocaleText("language"),
      ),
      body: Column(
        children: [
          ListTile(
            title: Text("English"),
            onTap: () => [LocaleNotifier.of(context).change('en'),Navigator.push(
              context,
              MaterialPageRoute(builder: (_) => LoginPage()),
            ),
            ],
          ),
          ListTile(
            title: Text("हिन्दी"),
            onTap: () => [LocaleNotifier.of(context).change('hi'),Navigator.push(
              context,
              MaterialPageRoute(builder: (_) => LoginPage()),
            ),
            ],
          ),
          ListTile(
            title: Text("मराठी"),
            onTap: () => [LocaleNotifier.of(context).change('mr'),Navigator.push(
              context,
              MaterialPageRoute(builder: (_) => LoginPage()),
            ),
            ],
          ),
        ],

      ),
    );
  }
}







