import 'package:flutter/material.dart';
import 'package:flutter_locales/flutter_locales.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

import 'package:flutter/cupertino.dart';
import 'package:suraksha_kavach/login.dart';
import 'package:suraksha_kavach/theme.dart';
import 'package:suraksha_kavach/widgets/custom_checkbox.dart';

import 'ConfigFile.dart';

class RegisterPage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<RegisterPage> {

  var my1 = TextEditingController();
  var my2 = TextEditingController();
  var my3 = TextEditingController();
  var my4 = TextEditingController();

  bool passwordVisible = false;
  void togglePassword() {
    setState(() {
      passwordVisible = !passwordVisible;
    });
  }

  String final_response = ""; //will be displayed on the screen once we get the data from the server

  final _formkey = GlobalKey<FormState>();

  //function to validate and save user form
  Future<void> _savingData() async{
    final validation = _formkey.currentState.validate();
    if (!validation){
      return;
    }
    _formkey.currentState.save();
  }

  //function to add border and rounded edges to our form
  OutlineInputBorder _inputformdeco(){
    return OutlineInputBorder(
      borderRadius: BorderRadius.circular(20.0),
      borderSide:
      BorderSide(width: 1.0, color: Colors.blue, style: BorderStyle.solid),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SafeArea(
        child: SingleChildScrollView(
          padding: EdgeInsets.fromLTRB(24.0, 40.0, 24.0, 0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  LocaleText(
                    'Register new account',
                    style: heading2.copyWith(color: textBlack),
                  ),
                  SizedBox(
                    height: 20,
                  ),
                  Image.asset(
                    'assets/images/accent.png',
                    width: 99,
                    height: 4,
                  ),
                ],
              ),
              SizedBox(
                height: 48,
              ),
              Form(
                child: Column(
                  children: [
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        decoration: InputDecoration(
                          hintText: 'Username',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my1,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        decoration: InputDecoration(
                          hintText: 'Email',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my2,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        keyboardType: TextInputType.number,
                        decoration: InputDecoration(
                          hintText: 'Mobile no',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                        ),
                        controller: my3,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                    Container(
                      decoration: BoxDecoration(
                        color: textWhiteGrey,
                        borderRadius: BorderRadius.circular(14.0),
                      ),
                      child: TextFormField(
                        obscureText: !passwordVisible,
                        decoration: InputDecoration(
                          hintText: 'Password',
                          hintStyle: heading6.copyWith(color: textGrey),
                          border: OutlineInputBorder(
                            borderSide: BorderSide.none,
                          ),
                          suffixIcon: IconButton(
                            color: textGrey,
                            splashRadius: 1,
                            icon: Icon(passwordVisible
                                ? Icons.visibility_outlined
                                : Icons.visibility_off_outlined),
                            onPressed: togglePassword,
                          ),
                        ),
                        controller: my4,
                      ),
                    ),
                    SizedBox(
                      height: 32,
                    ),
                  ],
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  CustomCheckbox(),
                  SizedBox(
                    width: 12,
                  ),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      LocaleText(
                        'By creating an account, you agree to our',
                        style: TextStyle(
                          fontSize: 13.0,
                        ),
                      ),
                      LocaleText(
                        'Terms & Conditions',
                        style: TextStyle(
                          fontSize: 11.0,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
              SizedBox(
                height: 32,
              ),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  primary: primaryBlue,
                  onPrimary: Colors.white,
                  shadowColor: Colors.black,
                  elevation: 3,
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15.0)),
                  minimumSize: Size(500, 60),
                ),
                onPressed: () async {

                  String text1,text2,text3,text4;

                  text1 = my1.text ;
                  text2 = my2.text ;
                  text3 = my3.text ;
                  text4 = my4.text;

                  final RegExp emailValidatorRegExp = RegExp(r"^[a-zA-Z0-9.]+@[a-zA-Z0-9]+.com");

                  if(text1 == '' || text2 == '' || text3 == '' || text3 == '')
                  {
                    showDialog(
                      context: context,
                      builder: (context) {
                        Widget okButton = TextButton(
                          child: Text("OK"),
                          onPressed: goToRegisterScreen,
                        );
                        return AlertDialog(
                          title: Text("Result"),
                          content: Text('Text Field is empty, Please Fill All Data'),
                          actions: [
                            okButton,
                          ],
                        );
                      },
                    );
                  }
                  else if(!emailValidatorRegExp.hasMatch(text2))
                  {
                    showDialog(
                      context: context,
                      builder: (context) {
                        Widget okButton = TextButton(
                          child: Text("OK"),
                          onPressed: goToRegisterScreen,
                        );
                        return AlertDialog(
                          title: Text("Result"),
                          content: Text('Email must be valid'),
                          actions: [
                            okButton,
                          ],
                        );
                      },
                    );
                  }
                  else if(text3.length != 10)
                  {
                    showDialog(
                      context: context,
                      builder: (context) {
                        Widget okButton = TextButton(
                          child: Text("OK"),
                          onPressed: goToRegisterScreen,
                        );
                        return AlertDialog(
                          title: Text("Result"),
                          content: Text('Mobile number must be 10 digit'),
                          actions: [
                            okButton,
                          ],
                        );
                      },
                    );
                  }
                  else{

                    _savingData();

                    //url to send the post request to

                    final url = serverurl+"register";
                    // final url = 'http://192.168.1.5:5000/register';

                    //sending a post request to the url
                    final response = await http.post(url, body: json.encode({'username' : text1,'email' : text2,'mobile' : text3,'password' : text4}));

                    String responseBody = response.body;

                    if(responseBody == "success"){
                      showDialog(
                        context: context,
                        builder: (context) {
                          Widget okButton = TextButton(
                            child: Text("OK"),
                            onPressed: goToLoginScreen,
                          );
                          return AlertDialog(
                            title: Text("Result"),
                            content: Text("You have been registered !\nYou can now log in."),
                            actions: [
                              okButton,
                            ],
                          );
                        },
                      ).then((value) {
                        goToLoginScreen();
                      });
                    }else{
                      showDialog(
                        context: context,
                        builder: (context) {
                          return AlertDialog(
                            content: Text("Something is wrong"),
                          );
                        },
                      );
                    }
                  }
                },
                child: LocaleText('Register',
                  style: TextStyle(fontSize: 18.0),
                ),
              ),
              SizedBox(
                height: 50,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  LocaleText(
                    "Already have an account? ",
                    style: TextStyle(
                      fontSize: 13.0,
                    ),
                  ),
                  GestureDetector(
                    onTap: () {
                      Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => LoginPage()));
                    },
                    child: LocaleText(
                      'Login',
                      style: regular16pt.copyWith(color: primaryBlue),
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  void goToLoginScreen() {
    Navigator.pushReplacementNamed(context, "/login");
  }

  void goToRegisterScreen() {
    Navigator.pushReplacementNamed(context, "/register");
  }

}
